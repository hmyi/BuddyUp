name: BuddyUp CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # BACKEND TESTING
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Backend Dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          python -m spacy download en_core_web_sm

      - name: Run Django Tests
        run: |
          cd backend
          export PYTHONPATH=$PWD
          python manage.py migrate
          python -m pytest

      # FRONTEND TESTING
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run React Tests
        run: |
          cd frontend
          npm test -- --watchAll=false

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      # DEPLOY BACKEND TO EC2
      - name: Deploy Backend to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          cd /home/ubuntu/BuddyUp/backend &&
          git pull origin main &&
          source venv/bin/activate &&
          pip install -r requirements.txt &&
          python manage.py migrate &&
          sudo supervisorctl restart backend

      # DEPLOY FRONTEND TO S3
      - name: Deploy Frontend to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2
        run: |
          cd frontend
          npm run build
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete
