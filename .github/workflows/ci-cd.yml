name: BuddyUp CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # BACKEND TESTING
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Backend Dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run Django Tests
        env:
          DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
        run: |
          cd backend
          python manage.py migrate
          pytest

      # FRONTEND TESTING
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run React Tests
        run: |
          cd frontend
          npm test -- --watchAll=false

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # DEPLOY BACKEND TO EC2
      - name: Deploy Backend to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ubuntu@${{ secrets.EC2_PUBLIC_IP }} "
          cd /home/ubuntu/buddyup/backend &&
          git pull origin main &&
          source venv/bin/activate &&
          pip install -r requirements.txt &&
          python manage.py migrate &&
          sudo systemctl restart gunicorn
          "

      # DEPLOY FRONTEND TO S3
      - name: Deploy Frontend to S3
        env:
	  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    	  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    	  AWS_REGION: us-east-2
        run: |
          cd frontend
          npm run build
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

